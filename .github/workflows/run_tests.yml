name: Landing Site Testing

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: english_landing
        type: choice
        options:
          - english_landing
          - spanish_landing
          - arabic_landing
          - chinese_landing
          - french_landing
          - german_landing
          - hindi_landing
          - italian_landing
          - korean_landing
          - polish_landing
          - portuguese_landing
          - russian_landing
          - turkish_landing
          - ukrainian_landing
          - all_landings

permissions:
  contents: read
  pages: write
  id-token: write


jobs:

  test:
    runs-on: ubuntu-latest
    outputs:
      options:
      english_landing: ${{ steps.english_landing.outcome }}
      spanish_landing: ${{ steps.spanish_landing.outcome }}
      arabic_landing: ${{ steps.arabic_landing.outcome }}
      chinese_landing: ${{ steps.chinese_landing.outcome }}
      french_landing: ${{ steps.french_landing.outcome }}
      german_landing: ${{ steps.german_landing.outcome }}
      hindi_landing: ${{ steps.hindi_landing.outcome }}
      italian_landing: ${{ steps.italian_landing.outcome }}
      korean_landing: ${{ steps.korean_landing.outcome }}
      polish_landing: ${{ steps.polish_landing.outcome }}
      portuguese_landing: ${{ steps.portuguese_landing.outcome }}
      russian_landing: ${{ steps.russian_landing.outcome }}
      turkish_landing: ${{ steps.turkish_landing.outcome }}
      ukrainian_landing: ${{ steps.ukrainian_landing.outcome }}
      all_landings: ${{ steps.all_landing.outcome }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Download All workflow artifacts
        uses: actions/download-artifact@v3
      - name: Run Tests
        run: |
          if [ "${{ github.event.inputs.deployment_target }}" == "english_landing" ]; then
            pytest test_cases/test_english.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "spanish_landing" ]; then
            pytest test_cases/test_spanish.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "arabic_landing" ]; then
            pytest test_cases/test_arabic.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "chinese_landing" ]; then
            pytest test_cases/test_chinese.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "french_landing" ]; then
            pytest test_cases/test_french.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "german_landing" ]; then
            pytest test_cases/test_german.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "hindi_landing" ]; then
            pytest test_cases/test_hindi.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "italian_landing" ]; then
            pytest test_cases/test_italian.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "korean_landing" ]; then
            pytest test_cases/test_korean.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "polish_landing" ]; then
            pytest test_cases/test_polish.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "portuguese_landing" ]; then
            pytest test_cases/test_portuguese.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "russian_landing" ]; then
            pytest test_cases/test_russian.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "turkish_landing" ]; then
            pytest test_cases/test_turkish.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "ukrainian_landing" ]; then
            pytest test_cases/test_ukrainian.py --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "all_landings" ]; then
            pytest -v --alluredir=allure-results
          else
            echo "Unsupported deployment target"
            exit 1
          fi
        continue-on-error: true
      - name: Store Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 3


  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Download Allure CLI
        run: |
          sudo apt-get install wget
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
      - name: Download Allure results
        uses: actions/download-artifact@v2
        with:
          name: allure-results
          path: allure-results
      - name: Generate Allure report
        run: allure generate allure-results -o _site
      - name: Store Generated report
        uses: actions/upload-artifact@v2
        with:
          name: _site
          path: _site
          retention-days: 3

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download Allure report
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
      - name: Success
        if: |
          needs.test.outputs.english_landing != 'failure' 
          && 
          needs.test.outputs.spanish_landing != 'failure' 
          && 
          needs.test.outputs.arabic_landing != 'failure' 
          && 
          needs.test.outputs.chinese_landing != 'failure'
          && 
          needs.test.outputs.french_landing != 'failure'
          && 
          needs.test.outputs.german_landing != 'failure'
          && 
          needs.test.outputs.hindi_landing != 'failure'
          && 
          needs.test.outputs.italian_landing != 'failure'
          && 
          needs.test.outputs.korean_landing != 'failure'
          && 
          needs.test.outputs.polish_landing != 'failure'
          && 
          needs.test.outputs.portuguese_landing != 'failure'
          && 
          needs.test.outputs.russian_landing != 'failure'
          && 
          needs.test.outputs.turkish_landing != 'failure'
          && 
          needs.test.outputs.ukrainian_landing != 'failure'
          && 
          needs.test.outputs.all_landings != 'failure'
        run: |
          curl --location 'https://hooks.slack.com/services/${{ secrets.st_slack }}' \--header 'Content-Type: application/json' \--data '{"text": ":white_check_mark: Landing website Tests were successful. Attached Allure Report :eyes: https://edgar3341.github.io/Tests/#"}'
      - name: Failure
        if: |
          needs.test.outputs.english_landing == 'failure' 
          && 
          needs.test.outputs.spanish_landing == 'failure' 
          && 
          needs.test.outputs.arabic_landing == 'failure' 
          && 
          needs.test.outputs.chinese_landing == 'failure'
          && 
          needs.test.outputs.french_landing == 'failure'
          && 
          needs.test.outputs.german_landing == 'failure'
          && 
          needs.test.outputs.hindi_landing == 'failure'
          && 
          needs.test.outputs.italian_landing == 'failure'
          && 
          needs.test.outputs.korean_landing == 'failure'
          && 
          needs.test.outputs.polish_landing == 'failure'
          && 
          needs.test.outputs.portuguese_landing == 'failure'
          && 
          needs.test.outputs.russian_landing == 'failure'
          && 
          needs.test.outputs.turkish_landing == 'failure'
          && 
          needs.test.outputs.ukrainian_landing == 'failure'
          && 
          needs.test.outputs.all_landings == 'failure'
        run: |
          curl --location 'https://hooks.slack.com/services/${{ secrets.st_slack }}' \--header 'Content-Type: application/json' \--data '{"text": "::x: Landing website: Some tests are not successful. Attached Allure Report :eyes: https://edgar3341.github.io/Tests/#"}'
